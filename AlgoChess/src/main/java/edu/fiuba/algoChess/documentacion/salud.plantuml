@startuml

title __SALUD's Class Diagram__\n

      interface edu.fiuba.algoChess.modelo.salud.Curable {
          {abstract} + curar(double): Salud
      }

      interface edu.fiuba.algoChess.modelo.salud.Herible {
          {abstract} + herir(double): Salud
      }

      abstract class edu.fiuba.algoChess.modelo.salud.Salud {
          # valorActual : double
          # valorCompleto : double
          {abstract} + curar(double)
          + igualA(Salud): boolean
          + stateComportarse():
          + stateEstaVivo(): boolean
      }

      class edu.fiuba.algoChess.modelo.salud.SaludLlena {
          + curar(double): Salud
          + herir(double): Salud
      }

      class edu.fiuba.algoChess.modelo.salud.SaludMedia {
          + curar(double): Salud
          + herir(double): Salud
      }

      class edu.fiuba.algoChess.modelo.salud.SaludMuerto {
          + curar(double): Salud
          + herir(double): Salud
          + stateComportarse():
          + stateEstaVivo(): boolean
      }

      interface edu.fiuba.algoChess.modelo.salud.StateVive {
          {abstract} + stateComportarse():
          {abstract} + stateEstaVivo(): boolean
      }

  edu.fiuba.algoChess.modelo.salud.Salud .up.|> edu.fiuba.algoChess.modelo.salud.Curable
  edu.fiuba.algoChess.modelo.salud.Salud .up.|> edu.fiuba.algoChess.modelo.salud.Herible
  edu.fiuba.algoChess.modelo.salud.Salud .up.|> edu.fiuba.algoChess.modelo.salud.StateVive
  edu.fiuba.algoChess.modelo.salud.SaludLlena -up-|> edu.fiuba.algoChess.modelo.salud.Salud
  edu.fiuba.algoChess.modelo.salud.SaludMedia -up-|> edu.fiuba.algoChess.modelo.salud.Salud
  edu.fiuba.algoChess.modelo.salud.SaludMuerto -up-|> edu.fiuba.algoChess.modelo.salud.Salud


@enduml
