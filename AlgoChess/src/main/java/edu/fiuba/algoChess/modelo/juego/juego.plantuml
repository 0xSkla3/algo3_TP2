@startuml

title __JUEGO's Class Diagram__\n

  namespace edu.fiuba.algoChess {
    namespace modelo.juego {
      class edu.fiuba.algoChess.modelo.juego.EstadoFaseInicial {
          + ubicarEnCelda()
      }
    }
  }
  

  namespace edu.fiuba.algoChess {
    namespace modelo.juego {
      class edu.fiuba.algoChess.modelo.juego.EstadoFaseJuego {
          + ubicarEnCelda()
      }
    }
  }
  

  namespace edu.fiuba.algoChess {
    namespace modelo.juego {
      abstract class edu.fiuba.algoChess.modelo.juego.EstadoJuego {
          {abstract} + ubicarEnCelda()
      }
    }
  }
  

  namespace edu.fiuba.algoChess {
    namespace modelo.juego {
      class edu.fiuba.algoChess.modelo.juego.Juego {
          {static} + soldado : Soldado
          ~ finDeJuego : Boolean
          ~ piezasMuertas : ArrayList<Pieza>
          ~ segundaEtapa : Boolean
          - activoBando1 : boolean
          - piezasEnTablero : ArrayList<Pieza>
          + Juego()
          + atacar()
          + comenzarSegundoStage()
          + crearPieza()
          + curar()
          + getBandoActivo()
          + getFinDeJuego()
          + getJugador1()
          + getJugador2()
          + getJugadorActivo()
          + getPiezasEnTablero()
          + getPiezasMuertas()
          + getSegundaEtapa()
          + getTablero()
          + isActivoBando1()
          + obtenerPiezaAPartirDeUbicacion()
          + pasarTurno()
          + terminarJuego()
          - evaluarFinDeJuego()
      }
    }
  }
  

  namespace edu.fiuba.algoChess {
    namespace modelo.juego {
      class edu.fiuba.algoChess.modelo.juego.Jugador {
          - creditos : int
          - nombre : String
          - piezas : ArrayList<Pieza>
          - puntaje : int
          + Jugador()
          + Jugador()
          + adquirirPieza()
          + getBando()
          + getCreditos()
          + getNombre()
          + getPuntaje()
          + nombre()
          + puntaje()
          + sumarPuntaje()
      }
    }
  }
  

  namespace edu.fiuba.algoChess {
    namespace modelo.juego {
      interface edu.fiuba.algoChess.modelo.juego.Turno {
          {abstract} + cambiarTurno()
          {abstract} + pasar()
          {abstract} + rendirse()
      }
    }
  }
  

  namespace edu.fiuba.algoChess {
    namespace modelo.juego {
      class edu.fiuba.algoChess.modelo.juego.TurnoFinal {
          + cambiarTurno()
          + pasar()
          + rendirse()
      }
    }
  }
  

  namespace edu.fiuba.algoChess {
    namespace modelo.juego {
      class edu.fiuba.algoChess.modelo.juego.TurnoJugador1 {
          + cambiarTurno()
          + pasar()
          + rendirse()
      }
    }
  }
  

  namespace edu.fiuba.algoChess {
    namespace modelo.juego {
      class edu.fiuba.algoChess.modelo.juego.TurnoJugador2 {
          + cambiarTurno()
          + pasar()
          + rendirse()
      }
    }
  }
  

  edu.fiuba.algoChess.modelo.juego.EstadoFaseInicial -up-|> edu.fiuba.algoChess.modelo.juego.EstadoJuego
  edu.fiuba.algoChess.modelo.juego.EstadoFaseJuego -up-|> edu.fiuba.algoChess.modelo.juego.EstadoJuego
  edu.fiuba.algoChess.modelo.juego.Juego o-- edu.fiuba.algoChess.modelo.bandos.Bando : bandoActivo
  edu.fiuba.algoChess.modelo.juego.Juego o-- edu.fiuba.algoChess.modelo.juego.Jugador : jugador1
  edu.fiuba.algoChess.modelo.juego.Juego o-- edu.fiuba.algoChess.modelo.juego.Jugador : jugador2
  edu.fiuba.algoChess.modelo.juego.Juego o-- edu.fiuba.algoChess.modelo.juego.Jugador : jugadorActivo
  edu.fiuba.algoChess.modelo.juego.Juego o-- edu.fiuba.algoChess.modelo.entorno.ObservadorTablero : observadorTablero
  edu.fiuba.algoChess.modelo.juego.Juego o-- edu.fiuba.algoChess.modelo.entorno.Tablero : tablero
  edu.fiuba.algoChess.modelo.juego.Jugador o-- edu.fiuba.algoChess.modelo.bandos.Bando : bando
  edu.fiuba.algoChess.modelo.juego.Jugador o-- edu.fiuba.algoChess.modelo.juego.Turno : turno
  edu.fiuba.algoChess.modelo.juego.TurnoFinal .up.|> edu.fiuba.algoChess.modelo.juego.Turno
  edu.fiuba.algoChess.modelo.juego.TurnoJugador1 .up.|> edu.fiuba.algoChess.modelo.juego.Turno
  edu.fiuba.algoChess.modelo.juego.TurnoJugador2 .up.|> edu.fiuba.algoChess.modelo.juego.Turno


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
